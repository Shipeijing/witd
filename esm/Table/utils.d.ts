/// <reference types="react" />
import { columnsProps, defaultContainerStyleProps, paginationProps } from './interface';
import { containerStyleProps } from './interface/containerStyleProps';
export declare function showColumn(columnList: columnsProps[], checkedList: any[]): columnsProps[];
export declare function checkKey(columnList: columnsProps[]): {
    key: import("react").Key | undefined;
    formOrder: number;
    searchOrder: number;
    dataIndex?: string | undefined;
    search?: boolean | undefined;
    detail?: boolean | undefined;
    hideShow?: boolean | undefined;
    required?: boolean | undefined;
    ellipsis?: boolean | undefined;
    rules?: import("rs-antd").FormRule[] | undefined;
    readOnly?: boolean | "add" | "update" | undefined;
    disabled?: boolean | "add" | "update" | undefined;
    antProps?: any;
    formProps?: import("rs-antd/lib/form").FormItemProps<any> | undefined;
    dataType?: "number" | "boolean" | "upload" | "input" | "select" | "time" | "checkbox" | "radio" | "tree" | "date" | "datetime" | "textArea" | "addressPicker" | "cascader" | undefined;
    dataSource?: any[] | import("./interface/columnProps").CascaderProps[] | import("./interface/columnProps").TreeProps[] | import("./interface/columnProps").SelectProps[] | undefined;
    dateFormat?: string | undefined;
    span?: number | undefined;
    colProps?: import("rs-antd").ColProps | undefined;
    onUpload?: ((file: any) => Promise<any>) | undefined;
    title?: import("rs-antd/lib/table/interface").ColumnTitle<any>;
    sorter?: boolean | import("rs-antd/lib/table/interface").CompareFn<any> | {
        compare?: import("rs-antd/lib/table/interface").CompareFn<any> | undefined;
        multiple?: number | undefined;
    } | undefined;
    sortOrder?: import("rs-antd/lib/table/interface").SortOrder | undefined;
    defaultSortOrder?: import("rs-antd/lib/table/interface").SortOrder | undefined;
    sortDirections?: import("rs-antd/lib/table/interface").SortOrder[] | undefined;
    showSorterTooltip?: boolean | import("rs-antd/lib/tooltip").TooltipProps | undefined;
    filtered?: boolean | undefined;
    filters?: import("rs-antd/lib/table/interface").ColumnFilterItem[] | undefined;
    filterDropdown?: import("react").ReactNode | ((props: import("rs-antd/lib/table/interface").FilterDropdownProps) => import("react").ReactNode);
    filterMultiple?: boolean | undefined;
    filteredValue?: import("rs-antd/lib/table/interface").FilterValue | null | undefined;
    defaultFilteredValue?: import("rs-antd/lib/table/interface").FilterValue | null | undefined;
    filterIcon?: import("react").ReactNode | ((filtered: boolean) => import("react").ReactNode);
    filterMode?: "menu" | "tree" | undefined;
    filterSearch?: import("rs-antd/lib/table/interface").FilterSearchType<import("rs-antd/lib/table/interface").ColumnFilterItem> | undefined;
    onFilter?: ((value: string | number | boolean, record: any) => boolean) | undefined;
    filterDropdownOpen?: boolean | undefined;
    onFilterDropdownOpenChange?: ((visible: boolean) => void) | undefined;
    filterResetToDefaultFilteredValue?: boolean | undefined;
    responsive?: import("rs-antd/lib/_util/responsiveObserver").Breakpoint[] | undefined;
    filterDropdownVisible?: boolean | undefined;
    onFilterDropdownVisibleChange?: ((visible: boolean) => void) | undefined;
    fixed?: import("rc-table/lib/interface").FixedType | undefined;
    className?: string | undefined;
    width?: string | number | undefined;
    colSpan?: number | undefined;
    rowSpan?: number | undefined;
    align?: import("rc-table/lib/interface").AlignType | undefined;
    render?: ((value: any, record: any, index: number) => import("react").ReactNode | import("rc-table/lib/interface").RenderedCell<any>) | undefined;
    shouldCellUpdate?: ((record: any, prevRecord: any) => boolean) | undefined;
    onCell?: import("rc-table/lib/interface").GetComponentProps<any> | undefined;
    onCellClick?: ((record: any, e: import("react").MouseEvent<HTMLElement, MouseEvent>) => void) | undefined;
    onHeaderCell?: import("rc-table/lib/interface").GetComponentProps<import("rc-table/lib/interface").ColumnType<any> | import("rc-table/lib/interface").ColumnGroupType<any>> | undefined;
    rowScope?: import("rc-table/lib/interface").RowScopeType | undefined;
}[];
export declare const initColumn: (columnList: any, hideSort: boolean | undefined, pagination: paginationProps) => any[];
export declare function formFilterDateTime(data: any, columns: columnsProps[]): any;
export declare function filterDateTime(data: any, columns: columnsProps[]): any;
export declare function valuePropName(dataType: string): "value" | "checked" | "fileList";
export declare function filterCodeFormData(formData: any): any;
export declare function getContainerStyle(mode: string, initStyle: containerStyleProps): defaultContainerStyleProps;
export declare function onFormatSlot(children: any): any[];
export declare function filterActionTitle(name?: string, defaultName?: string, showIcon?: boolean): string | undefined;
export declare function paginationFilter(pagination: any, hide: boolean): any;
